// Mobile nav toggle
const toggle = document.querySelector('.nav-toggle');
const links = document.querySelector('.nav-links');
if (toggle && links) {
  toggle.addEventListener('click', () => links.classList.toggle('open'));
}

// Smooth scroll for same-page anchors
document.querySelectorAll('a[href^="#"]').forEach(a => {
  a.addEventListener('click', e => {
    const targetId = a.getAttribute('href');
    const target = document.querySelector(targetId);
    if (target) {
      e.preventDefault();
      target.scrollIntoView({ behavior: 'smooth', block: 'start' });
      if (links) links.classList.remove('open');
    }
  });
});

// Theme toggle with persistence
const themeToggle = document.getElementById('themeToggle');
const userPref = localStorage.getItem('theme');
if (userPref === 'light') document.documentElement.classList.add('light');
function setTheme(next) {
  document.documentElement.classList.toggle('light', next === 'light');
  localStorage.setItem('theme', next);
  if (themeToggle) themeToggle.textContent = next === 'light' ? 'üåô' : '‚òÄÔ∏è';
}
if (themeToggle) {
  themeToggle.addEventListener('click', () => {
    const next = document.documentElement.classList.contains('light') ? 'dark' : 'light';
    setTheme(next);
  });
  // initialize icon
  setTheme(userPref || 'dark');
}

// Current year in footer
const yearEl = document.getElementById('year');
if (yearEl) yearEl.textContent = new Date().getFullYear();

// Robust open for CV PDF
// Remove any special handling for CV; let the browser open the PDF directly

// Project modal logic
const modal = document.getElementById('projectModal');
const modalTitle = document.getElementById('modalTitle');
const modalSubtitle = document.getElementById('modalSubtitle');
const modalBody = document.getElementById('modalBody');
const modalPdf = document.getElementById('modalPdf');

const PROJECTS = {
  tetris: {
    title: 'TETRIS sur ESP32',
    pdf: 'assets/pdf/tetris_rapport.pdf',
    html: `
      <p><strong>Situation</strong> : Conception et r√©alisation d'un jeu T√©tris interactif sur une matrice LED, pilot√© √† distance via WiFi avec un ESP32, dans le cadre d'un projet de groupe √† l'ENSEM.</p>
      <p><strong>T√¢che</strong> : Piloter l'int√©gralit√© du projet, de l'id√©e au prototype fonctionnel. Responsabilit√©s incluant la gestion d'√©quipe, la conception m√©canique et la supervision du d√©veloppement logiciel.</p>
      <p><strong>Action</strong> :</p>
      <ul>
        <li><strong>Gestion de projet</strong> : Animation de r√©unions r√©guli√®res, r√©partition des t√¢ches, r√©daction des rapports.</li>
        <li><strong>Conception m√©canique</strong> : Conception et usinage manuel du tableau en bois (10x20 cases) avec inserts, r√©alisation du cadre en aluminium et de la plaque en plexiglass.</li>
        <li><strong>D√©veloppement embarqu√© (C++)</strong> : Supervision g√©n√©rale et d√©veloppement direct de la classe des pi√®ces (m√©thodes de translation et rotation).</li>
      </ul>
      <p><strong>R√©sultat</strong> : Obtention d'un prototype fonctionnel avec une structure m√©canique finalis√©e et une interface intuitive. L'√©tat d'avancement de la programmation est de 90%, mais un bug persiste (la pi√®ce ne s'arr√™te pas sur la derni√®re ligne).</p>
    `,
  },
  labyrinthe: {
    title: 'Balade dans un labyrinthe ‚Äî Jeu Java',
    pdf: '#',
    html: `
      <p><strong>Situation</strong> : D√©veloppement d'un jeu vid√©o de labyrinthe avec interface graphique immersive en Java, dans le cadre d'un projet de d√©veloppement logiciel en √©quipe √† l'ENSEM.</p>
      <p><strong>T√¢che</strong> : Concevoir et impl√©menter des classes robustes et bien int√©gr√©es √† l'architecture logicielle d√©finie collectivement, en se focalisant sur les fonctionnalit√©s de base des entit√©s du jeu.</p>
      <p><strong>Action</strong> :</p>
      <ul>
        <li><strong>Conception Orient√©e Objet</strong> : Conception et impl√©mentation de la classe "Monstres" en appliquant les principes de POO (encapsulation, h√©ritage), avec attributs (points de vie, d√©g√¢ts) et comportements (d√©placement, attaque).</li>
        <li><strong>D√©veloppement des m√©caniques de jeu</strong> : Programmation du syst√®me de gestion des collisions entre toutes les entit√©s (joueur, monstres, objets).</li>
      </ul>
      <p><strong>R√©sultat</strong> : Livraison d'une application aboutie et pleinement op√©rationnelle : jeu fonctionnel, fluide et stable offrant une exp√©rience immersive; code bien architectur√© facilitant la maintenance et les √©volutions; retours positifs des enseignants sur la fluidit√© des interactions et l'exp√©rience utilisateur.</p>
    `,
  },
  leaves: { title: 'Classification de feuilles par CNN', pdf: '#', html: '<p>Contenu √† venir.</p>' },
  leaves: {
    title: 'Classification de feuilles par CNN',
    pdf: '#',
    html: `
      <p><strong>Situation</strong> : Conception et entra√Ænement d'un mod√®le de classification d'images d'esp√®ces de feuilles d'arbres par CNN, dans le cadre d'un cours sur les m√©thodes d'apprentissage automatique.</p>
      <p><strong>T√¢che</strong> : D√©velopper un pipeline complet de Deep Learning, de la pr√©paration des donn√©es √† l'√©valuation du mod√®le, en validant d'abord l'approche sur 4 esp√®ces puis en √©tendant le mod√®le √† 32 esp√®ces avec une pr√©cision optimale.</p>
      <p><strong>Action</strong> :</p>
      <ul>
        <li><strong>Pr√©paration des donn√©es</strong> : preprocessing (redimensionnement, normalisation) et augmentation (rotation, retournement).</li>
        <li><strong>Conception du CNN</strong> : architecture TensorFlow/Keras, choix des couches et fonctions d'activation, r√©glage des hyperparam√®tres.</li>
        <li><strong>Approche progressive</strong> : prototype 4 classes puis extension/optimisation √† 32 classes.</li>
      </ul>
      <p><strong>R√©sultat</strong> : Mod√®le atteignant <strong>91,36%</strong> de pr√©cision sur l'ensemble de test (32 esp√®ces). M√©thodologie robuste et acquisition d'une expertise pratique compl√®te en Deep Learning avec TensorFlow.</p>
    `,
  },
  twizzy: {
    title: 'Twizzy ‚Äî Vision & D√©tection',
    pdf: '#',
    html: `
      <p><strong>Situation</strong> : D√©veloppement de "Twizzy", un syst√®me de vision par ordinateur pour v√©hicules autonomes capable de d√©tecter et classifier les panneaux de signalisation en temps r√©el, malgr√© les variations lumineuses et la qualit√© d'image.</p>
      <p><strong>T√¢che</strong> : Chef d'√©quipe et responsable du traitement d'image : coordination et conception/optimisation de la cha√Æne visuelle compl√®te, de l'acquisition √† la reconnaissance.</p>
      <p><strong>Action</strong> :</p>
      <ul>
        <li><strong>Gestion de projet Agile</strong> : synchronisations r√©guli√®res, suivi des modules OpenCV et CNN en parall√®le.</li>
        <li><strong>OpenCV</strong> : conversion HSV, seuillage couleur, Canny, d√©tection de formes circulaires.</li>
        <li><strong>Deep Learning</strong> : entra√Ænement d'un CNN type ResNet sur GTSRB (50k+ images, 40+ classes), focus sur augmentation et pr√©traitement.</li>
        <li><strong>Int√©gration</strong> : interface Java Swing intuitive.</li>
      </ul>
      <p><strong>R√©sultat</strong> : Prototype fonctionnel avec <strong>86,68%</strong> sur le jeu de validation, interface utilisateur claire et livrable acad√©mique complet (code modulaire, rapport, d√©mo).</p>
    `,
  },
  sami: {
    title: 'SAMI ‚Äî Robot Lego Autonome',
    pdf: '#',
    html: `
      <p><strong>Situation</strong> : Conception et mise en ≈ìuvre de la cha√Æne de commande d'un robot Lego Ev3 devant naviguer de mani√®re autonome √† travers des points de passage, projet pluridisciplinaire (math√©matiques, automatique, informatique).</p>
      <p><strong>T√¢che</strong> : Piloter la partie automatique en bin√¥me et coordonner le groupe pour d√©finir les lois/variables de commande et la correction en temps r√©el.</p>
      <p><strong>Action</strong> :</p>
      <ul>
        <li><strong>Gestion d'√©quipe</strong> : r√©unions, rapport final, respect des d√©lais.</li>
        <li><strong>Mod√©lisation et conception</strong> : mod√®le Simulink (boucle ferm√©e contr√¥leur/robot), impl√©mentation Python des variables de contr√¥le PID bas√©es sur le mod√®le.</li>
      </ul>
      <p><strong>R√©sultat</strong> : Robot pleinement fonctionnel pour des trajectoires complexes, pr√©cision <strong>< 5%</strong> aux points de passage, comp√©tences renforc√©es en mod√©lisation dynamique et robotique.</p>
    `,
  },
};

function openProjectModal(key) {
  const data = PROJECTS[key];
  if (!data || !modal) return;
  modalTitle.textContent = data.title;
  modalSubtitle.textContent = "dans le cadre de l'ENSEM";
  modalBody.innerHTML = data.html;
  if (modalPdf) {
    modalPdf.href = data.pdf;
    modalPdf.setAttribute('target', '_blank');
    modalPdf.setAttribute('rel', 'noreferrer');
    modalPdf.removeAttribute('download');
    // Check that the PDF exists; if not, hide the button gracefully
    if (data.pdf && data.pdf !== '#') {
      fetch(data.pdf, { method: 'HEAD' }).then(r => {
        modalPdf.style.display = r.ok ? 'inline-block' : 'none';
        if (!r.ok) {
          const warn = document.createElement('p');
          warn.className = 'muted';
          warn.textContent = "Le PDF n'est pas disponible pour le moment.";
          modalBody.appendChild(warn);
        }
      }).catch(() => {
        modalPdf.style.display = 'none';
        const warn = document.createElement('p');
        warn.className = 'muted';
        warn.textContent = "Le PDF n'est pas disponible (erreur de chargement).";
        modalBody.appendChild(warn);
      });
    } else {
      modalPdf.style.display = 'none';
    }
  }
  modal.classList.add('open');
  modal.setAttribute('aria-hidden', 'false');
}

function closeProjectModal() {
  if (!modal) return;
  modal.classList.remove('open');
  modal.setAttribute('aria-hidden', 'true');
}

document.querySelectorAll('[data-project]').forEach(card => {
  card.style.cursor = 'pointer';
  card.addEventListener('click', () => openProjectModal(card.getAttribute('data-project')));
});

if (modal) {
  modal.querySelectorAll('[data-close]').forEach(btn => btn.addEventListener('click', closeProjectModal));
  document.addEventListener('keydown', e => { if (e.key === 'Escape') closeProjectModal(); });
}


